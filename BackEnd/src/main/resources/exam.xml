<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="exam">
    <resultMap id="examResultMap" type="com.onlinetest.backend.dto.swagger.ExamSwagger">
        <id property="id" column="exam_id" javaType="int"/>
        <result property="name" column="exam_name"/>
        <result property="starttime" column="exam_starttime"/>
        <result property="endtime" column="endtime"/>
        <result property="teacher_id" column="exam_teacher_id"/>
        <result property="teacher_name" column="exam_teacher_name"/>
        <collection property="questions" ofType="com.onlinetest.backend.dto.Question">
            <id property="id" column="q_id" javaType="int"/>
            <result property="content" column="q_content"/>
            <result property="description" column="q_description"/>
            <result property="commentary" column="q_commentary"/>
            <result property="type" column="q_type"/>
            <result property="writer_id" column="q_writer_id"/>
            <collection property="examples" ofType="com.onlinetest.backend.dto.Example">
                <id property="id" column="e_id"/>
                <result property="question_id" column="e_question_id"/>
                <result property="content" column="e_content"/>
                <result property="correct" column="e_correct"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getExams" parameterType="java.lang.Integer" resultMap="examResultMap">
        select
        exam.id as exam_id,
        exam.name as exam_name,
        exam.starttime as exam_starttime,
        exam.endtime as exam_endtime,
        exam.teacher_id as exam_teacher_id,
        u.name as exam_teacher_name,
        q.id as q_id,
        q.content as q_content,
        q.description as q_description,
        q.commentary as q_commentary,
        q.type as q_type,
        q.writer_id as q_writer_id,
        e.id as e_id,
        e.question_id as e_question_id,
        e.content as e_content,
        e.correct as e_correct
        from exam
        left join user u on u.id = exam.teacher_id
        left join question_exam qe on exam.id = qe.exam_id
        left join question q on qe.question_id = q.id
        left join example e on q.id= e.question_id
        where exam.teacher_id = #{user_id}
    </select>

    <select id="getExam" parameterType="java.util.Map" resultMap="examResultMap">
        select
        exam.id as exam_id,
        exam.name as exam_name,
        exam.starttime as exam_starttime,
        exam.endtime as exam_endtime,
        exam.teacher_id as exam_teacher_id,
        u.name as exam_teacher_name,
        q.id as q_id,
        q.content as q_content,
        q.description as q_description,
        q.commentary as q_commentary,
        q.type as q_type,
        q.writer_id as q_writer_id,
        e.id as e_id,
        e.question_id as e_question_id,
        e.content as e_content,
        e.correct as e_correct
        from exam
        left join question_exam qe on exam.id = qe.exam_id
        left join question q on qe.question_id = q.id
        left join user u on u.id = exam.teacher_id
        left join example e on q.id= e.question_id
        where exam.id = #{id} and exam.teacher_id = #{user_id}
    </select>

    <select id="getExamById" parameterType="java.util.Map" resultMap="examResultMap">
        select
        exam.id as exam_id,
        exam.name as exam_name,
        exam.starttime as exam_starttime,
        exam.endtime as exam_endtime,
        exam.teacher_id as exam_teacher_id,
        u.name as exam_teacher_name,
        q.id as q_id,
        q.content as q_content,
        q.description as q_description,
        q.commentary as q_commentary,
        q.type as q_type,
        q.writer_id as q_writer_id,
        e.id as e_id,
        e.question_id as e_question_id,
        e.content as e_content,
        e.correct as e_correct
        from exam
        left join question_exam qe on exam.id = qe.exam_id
        left join question q on qe.question_id = q.id
        left join user u on u.id = exam.teacher_id
        left join example e on q.id= e.question_id
        where exam.id = #{id}
    </select>

    <insert	id="createExam" useGeneratedKeys="true" keyProperty="id" parameterType="com.onlinetest.backend.dto.swagger.ExamQuestionsSwagger">
        insert into exam (name, starttime, endtime, teacher_id)
        values (#{name}, #{starttime}, #{endtime}, #{teacher_id})
    </insert>

    <update id="updateExam" keyProperty="id" parameterType="com.onlinetest.backend.dto.swagger.ExamQuestionsSwagger">
        update exam set
            name = #{name},
            starttime = #{starttime},
            endtime = #{endtime}
        where id = #{id} and teacher_id = #{teacher_id}
    </update>

    <delete id="deleteExam" parameterType="java.lang.Integer">
        delete from exam where id = #{exam_id}
    </delete>

    <insert	id="createQuestionExam" useGeneratedKeys="true" keyProperty="id" parameterType="com.onlinetest.backend.dto.QuestionExam">
        insert into question_exam (exam_id, question_id, score)
        values (#{exam_id}, #{question_id}, #{score})
    </insert>

    <delete id="deleteQuestionExam" parameterType="java.lang.Integer">
        delete from question_exam where exam_id = #{exam_id}
    </delete>

</mapper>
